generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User
model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  bvn       String? @unique
  password  String
  firstName String
  lastName  String

  secret          String?
  isEmailVerified Boolean @default(false)
  isBVNVerified   Boolean @default(false)

  dateOfBirth DateTime? @db.Date

  accounts     Account[]
  transactions Transaction[]
}

// Account
model Account {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  number      String        @unique
  type        AccountType
  status      AccountStatus
  balance     Decimal       @db.Money
  bankName    String
  openingDate DateTime      @db.Date
  currency    String

  phoneNumber String?
  email       String?

  user         User          @relation(fields: [userId], references: [id])
  userId       String        @db.Uuid
  transactions Transaction[]
}

enum AccountStatus {
  Active
  Dormant
}

enum AccountType {
  Current
  Savings
  Fixed
}

// Transaction
model Transaction {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())

  amount      Decimal         @db.Money
  description String
  type        TransactionType

  account       Account @relation(fields: [accountNumber], references: [number])
  accountNumber String

  user   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid
}

enum TransactionType {
  Inflow
  Outflow
}

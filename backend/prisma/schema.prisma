generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User
model User {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email     String  @unique
  phone     String? @db.Char(13)
  bvn       String? @unique
  password  String
  firstName String
  lastName  String

  secret          String?
  isEmailVerified Boolean @default(false)
  isPhoneVerified Boolean @default(false)
  isBvnVerified   Boolean @default(false)

  dateOfBirth DateTime? @db.Date

  accounts     Account[]
  transactions Transaction[]
}

// Account
model Account {
  id           String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  number       String        @unique @db.Char(10)
  type         AccountType
  status       AccountStatus
  bankName     String
  openingDate  DateTime      @db.Date
  currencyCode String

  phone String? @db.Char(13)
  email String?

  user        User          @relation(fields: [userId], references: [id])
  userId      String        @db.Uuid
  Transaction Transaction[]
}

enum AccountStatus {
  Active
  Inactive
  Dormant
}

enum AccountType {
  Current
  Savings
  Fixed
}

// Transaction
model Transaction {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  description   String
  type          TransactionType
  amount        Int             @db.Integer
  accountNumber String          @db.Char(10)

  user    User    @relation(fields: [userId], references: [id])
  userId  String  @db.Uuid
  account Account @relation(fields: [accountNumber], references: [number])
}

enum TransactionType {
  Credit
  Debit
}
